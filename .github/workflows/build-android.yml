name: Build Android APK

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci

      - name: Create local.properties
        run: |
          echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/local.properties
          echo "sdk.dir=$ANDROID_HOME" >> android/local.properties

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/release.keystore

      - name: Build Android APK & AAB
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          cd android
          ./gradlew assembleRelease bundleRelease --no-daemon

      - name: Get version from app.json
        id: version
        run: |
          VERSION=$(node -p "require('./app.json').expo.android.versionCode")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload APK to S3 (for testers)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws s3 cp android/app/build/outputs/apk/release/app-release.apk \
            s3://${{ secrets.AWS_S3_BUCKET }}/collection-center-app/collection-center-app-v${{ steps.version.outputs.version }}.apk \
            --acl public-read

      - name: Upload to Google Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.primecare.collectioncenter
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2

      - name: Generate download link
        run: |
          echo "âœ… APK uploaded to S3 successfully!"
          echo "ðŸ“± Download link: https://${{ secrets.AWS_S3_BUCKET }}.s3.${{ secrets.AWS_REGION }}.amazonaws.com/collection-center-app/collection-center-app-v${{ steps.version.outputs.version }}.apk"
          echo "ðŸŽ® AAB uploaded to Google Play Internal Testing track"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: collection-center-app-v${{ steps.version.outputs.version }}
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v3
        with:
          name: collection-center-app-bundle-v${{ steps.version.outputs.version }}
          path: android/app/build/outputs/bundle/release/app-release.aab
